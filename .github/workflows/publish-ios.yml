name: Publish to iOS App Store

on:
  workflow_call:
    secrets:
      APPSTORE_CONNECT_KEY_ID:
        required: true
      APPSTORE_CONNECT_ISSUER_ID:
        required: true
      APPLE_TEAM_ID:
        required: true
      APPLE_APP_IDENTIFIER:
        required: true
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD:
        required: true
      MATCH_GIT_URL:
        required: true
      MATCH_PASSWORD:
        required: true
      APPLE_USERNAME:
        required: true
      MATCH_KEYCHAIN_NAME:
        required: true
      MATCH_KEYCHAIN_PASSWORD:
        required: true
      MATCH_GIT_API_AUTH:
        required: true
      FLUTTER_DOTENV:
        required: true
      IOS_GOOGLE_SERVICE_INFO_PLIST:
        required: true
      APPSTORE_KEY_JSON:
        required: true

  workflow_dispatch:
    inputs:
      track:
        required: true
        description: Release track
        type: choice
        options:
          - "production"
          - "beta"
        default: "production"
jobs:
  ios-app-store:
    name: Publish to iOS app store
    runs-on: macos-latest

    env:
      APPSTORE_CONNECT_KEY_ID: ${{ secrets.APPSTORE_CONNECT_KEY_ID }}
      APPSTORE_CONNECT_ISSUER_ID: ${{ secrets.APPSTORE_CONNECT_ISSUER_ID }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      APPLE_APP_IDENTIFIER: ${{ secrets.APPLE_APP_IDENTIFIER }}
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      APPLE_USERNAME: ${{ secrets.APPLE_USERNAME }}
      MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
      MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}

    steps:
      - name: Defines variables according to triggers
        id: variables
        run: |
          if [ "${{ github.event_name }}" == "release" ] 
          then
            if [ "${{ github.event.release.prerelease }}" == true ]
            then
              echo "::set-output name=track::beta"
            else
              echo "::set-output name=track::production"
            fi
            echo "::set-output name=head_ref::main"
          fi

          if [ "${{ github.event_name }}" == "workflow_dispatch" ] 
          then
            echo "::set-output name=track::${{ github.event.inputs.track }}"
            echo "::set-output name=head_ref::${{ github.head_ref }}"
          fi

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.variables.outputs.head_ref }}

      - name: Config GIT API Keys
        run: |
          git config --global url."https://${{ secrets.MATCH_GIT_API_AUTH }}@github.com/".insteadOf "git@github.com:"

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "2.10.0"

      - name: Create assets/_env
        run: |
          echo "${{ secrets.FLUTTER_DOTENV }}" > assets/_env

      - name: Create GoogleService-Info.plist
        run: |
          echo "${{ env.IOS_GOOGLE_SERVICE_INFO_PLIST }}" > ./ios/Runner/GoogleService-Info.plist

      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Delete Podfile.lock
        run: rm ios/Podfile.lock

      - name: Download pub dependencies
        run: flutter pub get

      - name: Pod repo update
        working-directory: ios
        run: pod install --repo-update

      - name: Download Appstore Connect key
        id: app_store_connect_key
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: appstore_connect_key.p8
          encodedString: ${{ secrets.APPSTORE_CONNECT_KEY_BASE64 }}

      - name: Cache bundle dependencies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Download bundle dependencies
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install

      - name: Build iOS via Flutter
        run: flutter build ios --no-codesign --release

      - name: Build iOS via Fastlane
        run: bundle exec fastlane ios build
        env:
          APPSTORE_CONNECT_KEY_FILE: ${{ steps.app_store_connect_key.outputs.filePath }}

      - name: Upload to App Store (manual release)
        if: steps.variables.outputs.track == 'beta'
        run: bundle exec fastlane ios beta
        env:
          APPSTORE_CONNECT_KEY_FILE: ${{ steps.app_store_connect_key.outputs.filePath }}

      - name: Release to App Store (automatic release)
        if: steps.variables.outputs.track == 'production'
        run: bundle exec fastlane ios deploy
        env:
          APPSTORE_CONNECT_KEY_FILE: ${{ steps.app_store_connect_key.outputs.filePath }}
