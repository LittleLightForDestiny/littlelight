name: Publish to Google Play

on:
  workflow_call:
    secrets:
      FLUTTER_DOTENV:
        required: true
      ANDROID_GOOGLE_SERVICES_JSON:
        required: true
      ANDROID_KEYSTORE_BASE64:
        required: true
      ANDROID_KEYSTORE_PASSWORD:
        required: true
      ANDROID_KEY_PASSWORD:
        required: true
      ANDROID_KEY_ALIAS:
        required: true
      SUPPLY_PACKAGE_NAME:
        required: true
      SUPPLY_JSON_KEY_DATA:
        required: true

  workflow_dispatch:
    inputs:
      track:
        required: true
        description: Release track
        type: choice
        options:
          - "production"
          - "beta"
          - "none"
        default: "none"

jobs:
  google-play:
    name: Publish to Google Play
    if: github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest

    steps:
      - name: Defines variables according to triggers
        id: variables
        run: |
          if [ "${{ github.event_name }}" == "release" ] 
          then
            if [ "${{ github.event.release.prerelease }}" == true ]
            then
              echo "track=beta" >> $GITHUB_OUTPUT
            else
              echo "track=production" >> $GITHUB_OUTPUT
            fi
            echo "head_ref=main" >> $GITHUB_OUTPUT
            echo "version=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          fi

          if [ "${{ github.event_name }}" == "workflow_dispatch" ] 
          then
            echo "track=${{ github.event.inputs.track }}" >> $GITHUB_OUTPUT
            echo "head_ref=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          fi

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.variables.outputs.head_ref }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.10.5"

      - name: Create assets/_env
        run: |
          echo "${{ secrets.FLUTTER_DOTENV }}" > assets/_env

      - name: Create google-services.json
        run: |
          echo '${{ secrets.ANDROID_GOOGLE_SERVICES_JSON }}' > android/app/google-services.json

      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Download pub dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk

      - name: Upload APK to workflow run
        uses: actions/upload-artifact@v1
        with:
          name: LittleLight-android-apk
          path: ${{ github.workspace }}/build/app/outputs/flutter-apk/app-release.apk

      - name: Upload build to Github Release
        uses: softprops/action-gh-release@v1
        if: steps.variables.outputs.version != ''
        with:
          tag_name: ${{ steps.variable.outputs.version }}
          files: ${{ github.workspace }}/build/app/outputs/flutter-apk/app-release.apk

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: release.keystore
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Create release.properties
        run: |
          mkdir android/.keys
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/.keys/release.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/.keys/release.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/.keys/release.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/.keys/release.properties

      - name: Build Android App Bundle
        run: flutter build appbundle

      - name: Cache bundle dependencies
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Download bundle dependencies
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install

      - name: Upload aab to workflow run
        uses: actions/upload-artifact@v1
        with:
          name: LittleLight-android-aab
          path: ${{ github.workspace }}/build/app/outputs/bundle/release/app-release.aab

      - name: Release to Google Play (beta)
        if: steps.variables.outputs.track == 'beta'
        env:
          SUPPLY_PACKAGE_NAME: ${{ secrets.SUPPLY_PACKAGE_NAME }}
          SUPPLY_JSON_KEY_DATA: ${{ secrets.SUPPLY_JSON_KEY_DATA }}
        run: |
          bundle exec fastlane android beta

      - name: Release to Google Play (production)
        if: steps.variables.outputs.track == 'production'
        env:
          SUPPLY_PACKAGE_NAME: ${{ secrets.SUPPLY_PACKAGE_NAME }}
          SUPPLY_JSON_KEY_DATA: ${{ secrets.SUPPLY_JSON_KEY_DATA }}
        run: |
          bundle exec fastlane android deploy
