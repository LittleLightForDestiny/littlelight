name: Format and generate on push

on:
  push:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  format:
    if: github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: stable

      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Download pub dependencies
        run: flutter pub get

      - name: Flutter Build generated models
        run: flutter pub run build_runner build --delete-conflicting-outputs
      
      - name: Flutter Format
        run: flutter format --line-length 120 --fix ./lib
        
      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'LittleLightBot'
          git config --global user.email 'littlelight-bot@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.BOT_PAT }}@github.com/${{ github.repository }}
          git commit -am "Code formatting"
          git push